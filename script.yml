#!/bin/bash

# Validate script usage
if [[ $# -ne 2 ]]; then
    echo "Usage: $0 <base_folder> <application>"
    echo "<application> can be a specific folder name or '*' for all folders."
    exit 1
fi

BASE_FOLDER="$1"
APPLICATION="$2"

# Initialize a variable to hold the combined JSON content
COMBINED_JSON="[]"

# Function to process YAML files
process_files() {
    for file in "$1"/*.yaml; do
        if [[ -e "$file" ]]; then
            # Extract image entries as JSON and append to the combined JSON variable
            local file_content=$(yq e '.[].images' "$file" -o=json)
            # Use jq to merge the current file content into the combined JSON array
            COMBINED_JSON=$(jq -c --argjson newContent "$file_content" '. + $newContent' <<< "$COMBINED_JSON")
        fi
    done
}

# Process a specific application folder or all folders
if [[ "$APPLICATION" == "*" ]]; then
    for dir in "$BASE_FOLDER"/*; do
        if [[ -d "$dir" ]]; then
            process_files "$dir"
        fi
    done
else
    APP_DIR="$BASE_FOLDER/$APPLICATION"
    if [[ -d "$APP_DIR" ]]; then
        process_files "$APP_DIR"
    else
        echo "Application directory $APP_DIR does not exist."
        exit 1
    fi
fi

# Transform COMBINED_JSON into an object with image names as keys
COMBINED_JSON=$(echo "$COMBINED_JSON" | jq -c 'reduce .[] as $item ({}; .[$item.imageName] = {imageName: $item.imageName, imageRegistry: $item.imageRegistry, imageTag: $item.imageTag})')
# Output the transformed JSON
echo "$COMBINED_JSON"

